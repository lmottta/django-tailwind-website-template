# Generated by Django 5.1.3 on 2025-01-06 08:24

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('description', models.TextField(verbose_name='Descrição')),
                ('icon', models.ImageField(upload_to='achievements/', verbose_name='Ícone')),
                ('requirement', models.TextField(verbose_name='Requisito')),
                ('points', models.PositiveIntegerField(verbose_name='Pontos')),
            ],
            options={
                'verbose_name': 'Conquista',
                'verbose_name_plural': 'Conquistas',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('description', models.TextField(verbose_name='Descrição')),
                ('muscle_group', models.CharField(choices=[('chest', 'Peito'), ('back', 'Costas'), ('shoulders', 'Ombros'), ('legs', 'Pernas'), ('arms', 'Braços'), ('abs', 'Abdômen'), ('cardio', 'Cardio')], max_length=20, verbose_name='Grupo Muscular')),
                ('equipment', models.CharField(choices=[('none', 'Nenhum'), ('dumbbells', 'Halteres'), ('barbell', 'Barra'), ('machine', 'Máquina'), ('cables', 'Cabos'), ('bodyweight', 'Peso Corporal')], max_length=20, verbose_name='Equipamento')),
                ('image', models.ImageField(blank=True, null=True, upload_to='exercises/', verbose_name='Imagem')),
                ('video_url', models.URLField(blank=True, null=True, verbose_name='URL do Vídeo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
            ],
            options={
                'verbose_name': 'Exercício',
                'verbose_name_plural': 'Exercícios',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Conteúdo')),
                ('image', models.ImageField(blank=True, null=True, upload_to='posts/', verbose_name='Imagem')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL, verbose_name='Autor')),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_posts', to=settings.AUTH_USER_MODEL, verbose_name='Curtidas')),
            ],
            options={
                'verbose_name': 'Post',
                'verbose_name_plural': 'Posts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Conteúdo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='fitness.post', verbose_name='Post')),
            ],
            options={
                'verbose_name': 'Comentário',
                'verbose_name_plural': 'Comentários',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Workout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Título')),
                ('description', models.TextField(verbose_name='Descrição')),
                ('is_public', models.BooleanField(default=True, verbose_name='Público')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_workouts', to=settings.AUTH_USER_MODEL, verbose_name='Criador')),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_workouts', to=settings.AUTH_USER_MODEL, verbose_name='Curtidas')),
            ],
            options={
                'verbose_name': 'Treino',
                'verbose_name_plural': 'Treinos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='post',
            name='workout',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posts', to='fitness.workout', verbose_name='Treino'),
        ),
        migrations.CreateModel(
            name='WorkoutExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sets', models.PositiveIntegerField(verbose_name='Séries')),
                ('reps', models.CharField(max_length=50, verbose_name='Repetições')),
                ('rest_time', models.PositiveIntegerField(verbose_name='Tempo de Descanso (segundos)')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Ordem')),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitness.exercise')),
                ('workout', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitness.workout')),
            ],
            options={
                'verbose_name': 'Exercício do Treino',
                'verbose_name_plural': 'Exercícios do Treino',
                'ordering': ['order'],
                'unique_together': {('workout', 'order')},
            },
        ),
        migrations.AddField(
            model_name='workout',
            name='exercises',
            field=models.ManyToManyField(through='fitness.WorkoutExercise', to='fitness.exercise'),
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achieved_at', models.DateTimeField(auto_now_add=True, verbose_name='Conquistado em')),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='fitness.achievement', verbose_name='Conquista')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Conquista do Usuário',
                'verbose_name_plural': 'Conquistas do Usuário',
                'ordering': ['-achieved_at'],
                'unique_together': {('user', 'achievement')},
            },
        ),
    ]
